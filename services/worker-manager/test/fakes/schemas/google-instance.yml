# This is a partial schema for google.compute.instances.insert.  Feel free to add additional
# properties here if necessary, consulting with the relevant bits of Google documentation.
#
# NOTE: the `testProperty` properties here are used in the tests to verify that
# additional configuration from the user is correctly passed to the endpoint.
#
# https://cloud.google.com/compute/docs/reference/rest/v1/instances/insert
type: object
definitions:
  # https://cloud.google.com/resource-manager/docs/creating-managing-labels
  labels:
    type: object
    propertyNames:
      pattern: '^[a-z0-9_-]*$'
      minLength: 1
      maxLength: 63
    additionalProperties:
      type: string
      pattern: '^[a-z0-9_-]*$'
      minLength: 0
      maxLength: 63
    maxProperties: 64
properties:
  project: {type: string}
  zone: {type: string}
  requestId: {type: string}
  requestBody:
    type: object
    properties:
      name: {type: string}
      labels: {$ref: "#/definitions/labels"}
      description: {type: string}
      machineType: {type: string}
      networkInterfaces:
        # this is not generated by the provider but must be present by the
        # worker pool config schema
        type: array
        uniqueItems: true
      disks:
        type: array
        items:
          type: object
          properties:
            labels: {$ref: "#/definitions/labels"}
            testProperty: {}
          additionalProperties: false
          required: []
        uniqueItems: false
      serviceAccounts:
        type: array
        items:
          type: object
          properties:
            email: {type: string}
            scopes:
              type: array
              items: {type: string}
              uniqueItems: false
          additionalProperties: false
          required: [email, scopes]
        uniqueItems: false
      scheduling:
        type: object
        properties:
          automaticRestart: {type: boolean}
          testProperty: {}
        additionalProperties: false
        required: [automaticRestart]
      metadata:
        type: object
        properties:
          items:
            type: array
            items:
              type: object
              properties:
                key: {type: string}
                value: {type: string}
              additionalProperties: false
              required: [key, value]
            uniqueItems: false
        additionalProperties: false
        required: [items]
      testProperty: {}
    additionalProperties: false
    required: [name, labels, description, machineType, networkInterfaces, disks, serviceAccounts, scheduling, metadata]
additionalProperties: false
required: [project, zone, requestId, requestBody]

